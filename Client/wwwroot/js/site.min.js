$(document).ready((() => { $("#CarsForCompany").on("change", (() => { window.location = "/Car/index?id=" + $("#CarsForCompany").val() })), document.querySelectorAll('[name="status"]').forEach((e => { e.addEventListener("click", doFiltering) })), carTimerJob(63566), jobTimer(63566), console.log("documentReady") })), $(".uppercase").on("keyup", (function () { let e = $(this).val(); $(this).val(e.toUpperCase()) })); const clearErrors = () => { $(".validation-summary-errors").empty(); for (var e = document.getElementsByClassName("text-danger"), t = 0; t < e.length; t++)e[t].innerHTML = "" }, setupClearErrors = () => { clearErrors(); var e = document.getElementById("CreateForm"); e && e.addEventListener("mousedown", clearErrors) }; document.addEventListener("DOMContentLoaded", setupClearErrors); const carTimerJob = e => { $.ajax({ url: `http://localhost:${e}/api/carapi/getallcars`, type: "GET", dataType: "json", success: t => { if (0 === t.length) return setTimeout((() => carTimerJob(e)), 100), void console.log("No cars were found!"); let n = t[Math.floor(Math.random() * t.length)]; if (!0 === n.disabled) return void console.log(n.regNr + " is blocked for updating of Online/Offline!"); n.online = !n.online, $.ajax({ url: `http://localhost:${e}/api/carapi/updateonline`, contentType: "application/json", type: "POST", data: JSON.stringify(n), dataType: "json", success: e => { }, error: e => { } }); const o = `#${n.id} td:eq(2)`, a = `#${n.id + "_2"} td:eq(3)`, s = "#" + (n.id + "_3"); !0 === n.online ? ($(o).text("Online"), $(o).removeClass("alert-danger"), $(a).text("Online"), $(a).removeClass("alert-danger"), $(s).text("Online"), $(s).removeClass("alert-danger"), console.log(n.regNr + " is Online!")) : ($(o).text("Offline"), $(o).addClass("alert-danger"), $(a).text("Offline"), $(a).addClass("alert-danger"), $(s).text("Offline"), $(s).addClass("alert-danger"), console.log(n.regNr + " is Offline!")), null !== document.getElementById("All") && doFiltering() } }), setTimeout((() => carTimerJob(e)), 500) }, doFiltering = () => { let e = 0, t = document.getElementById("All"); !1 === t.checked && (t = document.getElementById("Online"), e = !0 === t.checked ? 1 : 2); var n = $("#cars > tbody"); $("tr", n).each((function () { $(this).removeClass("hidden"); let t = $("td:eq(2)", $(this)).html(); void 0 !== t && (t = t.trim()), "Offline" === t && 1 === e && $(this).addClass("hidden"), "Online" === t && 2 === e && $(this).addClass("hidden") })) }; let oldJobs = {}; const jobTimer = e => { $.ajax({ url: `http://localhost:${e}/api/jobstatus/getalljobs`, type: "GET", dataType: "json", success: e => { 0 === Object.keys(e).length ? console.log("No jobs found!") : Object.entries(e).forEach((([e, t]) => { oldJobs[e] && oldJobs[e].status === t.status || setJobStatus(e, t.status) })), oldJobs = e }, error: (e, t, n) => { console.error("AJAX call failed: ", t, n) } }), setTimeout((() => jobTimer(e)), 100) }; function setJobStatus(e, t) { const n = document.getElementById("job_" + e); if (n) if (n.innerHTML = "", "Running" === t) { console.log("setJobStatus Spinner: ", e, t); const o = '\n            <svg viewBox="0 0 800 800" xmlns="http://www.w3.org/2000/svg" width="60" height="60">\n                <style>\n                    @keyframes spin {\n                        to {\n                            transform: rotate(360deg);\n                        }\n                    }\n\n                    @keyframes spin2 {\n                        0% {\n                            stroke-dasharray: 1, 800;\n                            stroke-dashoffset: 0;\n                        }\n                        50% {\n                            stroke-dasharray: 400, 400;\n                            stroke-dashoffset: -200px;\n                        }\n                        100% {\n                            stroke-dasharray: 800, 1;\n                            stroke-dashoffset: -800px;\n                        }\n                    }\n\n                    .spin2 {\n                        transform-origin: center;\n                        animation: spin2 1.5s ease-in-out infinite,\n                        spin 2s linear infinite;\n                        animation-direction: alternate;\n                    }\n                </style>\n                <circle class="spin2" cx="400" cy="400" fill="none" r="200" stroke-width="50" stroke="#E387FF" stroke-dasharray="700 1400" stroke-linecap="round"></circle>\n            </svg>\n        '; n.innerHTML = o } else { const e = document.createElement("span"); e.className = "text-state", e.textContent = t, n.appendChild(e) } }